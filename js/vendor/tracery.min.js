var tracery={utilities:{}}
!function(){function t(t){return'"'+t+'"'}function e(t){return t}function s(s){function r(t){if(h!==t){var e=s.substring(h,t)
if(l){l=!1
var r=e.split(".")
n=r[0],o=r.slice(1,r.length)}else tracery.addError("multiple possible expansion symbols in tag!"+s)}h=t}for(var n,o,i=[],a=[],u=0,h=0,l=!0,c=0;c<s.length;c++){var p=s.charAt(c)
switch(p){case"[":0===u&&r(c),u++
break
case"]":if(u--,0===u){var f=s.substring(h+1,c)
l?i.push(e(f)):a.push(e(f)),h=c+1}}}if(r(c),u>0){var y="Too many '[' in rule "+t(rule)
return void tracery.addError(y)}if(0>u){var y="Too many ']' in rule "+t(rule)
return void tracery.addError(y)}return{preActions:i,postActions:a,symbol:n,mods:o,raw:s}}function n(e){function r(t){var r=e.substring(i,t)
r.length>0&&n.push(a?s(r):r),a=!a,i=t+1}var n=[]
if(!("string"==typeof e||e instanceof String))return void tracery.addError("Cannot parse non-string rule "+e)
if(0===e.length)return[]
for(var o=0,i=0,a=!1,u=0;u<e.length;u++){var h=e.charAt(u)
switch(h){case"[":o++
break
case"]":o--
break
case"#":0===o&&r(u)}}if(o>0){var l="Too many '[' in rule "+t(e)
return tracery.addError(l),void console.warn(l)}if(0>o){var l="Too many ']' in rule "+t(e)
return tracery.addError(l),void console.warn(l)}if(a){var l="Odd number of '#' in rule "+t(e)
return tracery.addError(l),void console.warn(l)}return r(e.length),n}function o(t,e){this.grammar=t,this.key=e,this.currentRules=void 0,this.ruleSets=[]}function i(){this.clear()}!function(){var t=!1,e=/xyz/.test(function(){xyz})?/\b_super\b/:/.*/
this.Class=function(){},Class.extend=function(s){function r(){!t&&this.init&&this.init.apply(this,arguments)}var n=this.prototype
t=!0
var o=new this
t=!1
for(var i in s)o[i]="function"==typeof s[i]&&"function"==typeof n[i]&&e.test(s[i])?function(t,e){return function(){var s=this._super
this._super=n[t]
var r=e.apply(this,arguments)
return this._super=s,r}}(i,s[i]):s[i]
return r.prototype=o,r.prototype.constructor=r,r.extend=arguments.callee,r}}()
var a=function(t){this.raw=t,this.sections=n(t)}
a.prototype.getParsed=function(){return this.sections||(this.sections=n(raw)),this.sections},a.prototype.toString=function(){return this.raw},a.prototype.toJSONString=function(){return this.raw}
var u=(Object.freeze({RED:0,GREEN:1,BLUE:2}),function(t){if(t.constructor===Array)t=t.slice(0,t.length)
else if(t.prototype===u);else{if(!("string"==typeof t||t instanceof String))throw console.log(t),"creating ruleset with unknown object type!"
var e=Array.prototype.slice.call(arguments)
t=e}this.rules=t,this.parseAll(),this.uses=[],this.startUses=[],this.totalUses=0
for(var s=0;s<this.rules.length;s++)this.uses[s]=0,this.startUses[s]=this.uses[s],this.totalUses+=this.uses[s]})
u.prototype.parseAll=function(t){for(var e=0;e<this.rules.length;e++)this.rules[e].prototype!==a&&(this.rules[e]=new a(this.rules[e]))},u.prototype.mapRules=function(t){return this.rules.map(function(e,s){return t(e,s)})},u.prototype.applyToRules=function(t){for(var e=0;e<this.rules.length;e++)t(this.rules[e],e)},u.prototype.get=function(){var t=this.getIndex()
return this.rules[t]},u.prototype.getRandomIndex=function(){return Math.floor(this.uses.length*Math.random())},u.prototype.getIndex=function(){for(var t=this.getRandomIndex(),e=this.totalUses/this.uses.length,s=0;this.uses[t]>e&&20>s;)t=this.getRandomIndex(),s++
return t},u.prototype.decayUses=function(t){this.totalUses=0
for(var e=0;e<this.uses;e++)this.uses[index]*=1-t,this.totalUses+=this.uses[index]},u.prototype.testRandom=function(){console.log("Test random")
for(var t=[],e=0;e<this.uses.length;e++)t[e]=0
for(var s=10*this.uses.length,e=0;s>e;e++){var r=this.getIndex()
this.uses[r]+=1,t[r]++,this.decayUses(.1)}for(var e=0;e<this.uses.length;e++)console.log(e+":	"+t[e]+" 	"+this.uses[e])},u.prototype.getSaveRules=function(){var t=this.rules.map(function(t){return t.toJSONString()})
return t}
var h=function(t,e){this.node=t,this.grammar=t.grammar,this.raw=e}
h.prototype.activate=function(){var t=this.node
t.actions.push(this),this.amended=this.grammar.flatten(this.raw)
var e=s(this.amended),r=e.preActions
if(r&&r.length>0&&(this.subactions=r.map(function(e){return new h(t,e)})),e.symbol){var n=e.symbol.split(":")
if(2!==n.length)throw"Unknown action: "+e.symbol
this.push={symbol:n[0],rules:n[1].split(",")},t.grammar.pushRules(this.push.symbol,this.push.rules)}if(this.subactions)for(var o=0;o<this.subactions.length;o++)this.subactions[o].activate()},h.prototype.deactivate=function(){if(this.subactions)for(var t=0;t<this.subactions.length;t++)this.subactions[t].deactivate()
this.push&&this.node.grammar.popRules(this.push.symbol,this.push.rules)}
var l=function(t){switch(t=t.toLowerCase()){case"a":return!1
case"e":return!1
case"i":return!1
case"o":return!1
case"u":return!1}return!0},c={capitalizeAll:function(t){return t.replace(/(?:^|\s)\S/g,function(t){return t.toUpperCase()})},capitalize:function(t){return t.charAt(0).toUpperCase()+t.slice(1)},inQuotes:function(t){return'"'+t+'"'},comma:function(t){var e=t.charAt(t.length-1)
return","===e?t:"."===e?t:"?"===e?t:"!"===e?t:t+","},beeSpeak:function(t){return t=t.replace(/s/,"zzz")},a:function(t){return l(t.charAt())?"a "+t:"an "+t},s:function(t){var e=t.charAt(t.length-1)
switch(e){case"y":return l(t.charAt(t.length-2))?t.slice(0,t.length-1)+"ies":t+"s"
case"x":return t.slice(0,t.length-1)+"en"
case"z":return t.slice(0,t.length-1)+"es"
case"h":return t.slice(0,t.length-1)+"es"
default:return t+"s"}},ed:function(t){var e=t.indexOf(" "),t=t,s=""
e>0&&(s=t.substring(e,t.length),t=t.substring(0,e))
var r=t.charAt(t.length-1)
switch(r){case"y":return l(t.charAt(t.length-2))?t.slice(0,t.length-1)+"ied"+s:t+"ed"+s
case"e":return t+"d"+s
default:return t+"ed"+s}}},p=0,f=Class.extend({init:function(){this.depth=0,this.id=p,p++,this.childText="[[UNEXPANDED]]"},setParent:function(t){t&&(this.depth=t.depth+1,this.parent=t,this.grammar=t.grammar)},expand:function(){return"???"},expandChildren:function(){if(this.children){this.childText=""
for(var t=0;t<this.children.length;t++)this.children[t].expand(),this.childText+=this.children[t].finalText
this.finalText=this.childText}},createChildrenFromSections:function(t){var e=this
this.children=t.map(function(t){return"string"==typeof t||t instanceof String?new d(e,t):new m(e,t)})}}),y=f.extend({init:function(t,e){this._super(),this.grammar=t,this.parsedRule=n(e)},expand:function(){this.createChildrenFromSections(this.parsedRule),this.expandChildren()}}),m=f.extend({init:function(t,e){if(this._super(),null===e||"object"!=typeof e){if(!("string"==typeof e||e instanceof String))throw console.log("Unknown tagNode input: ",e),"Can't make tagNode from strange tag!"
console.warn("Can't make tagNode from unparsed string!"),e=s(e)}this.setParent(t),$.extend(this,e)},expand:function(){tracery.outputExpansionTrace&&console.log(r.sections),this.rule=this.grammar.getRule(this.symbol),this.rule.error&&(this.error=this.rule.error,tracery.addError(this.error)),this.actions=[],this.createChildrenFromSections(this.rule.getParsed())
for(var t=0;t<this.preActions.length;t++){var e=new h(this,this.preActions[t])
e.activate()}this.rule.sections||console.log(this.rule),this.expandChildren()
for(var t=0;t<this.actions.length;t++)this.actions[t].deactivate()
this.finalText=this.childText
for(var t=0;t<this.mods.length;t++)this.finalText=this.grammar.applyMod(this.mods[t],this.finalText)},toLabel:function(){return this.symbol},toString:function(){return"TagNode '"+this.symbol+"' mods:"+this.mods+", preactions:"+this.preActions+", postactions"+this.postActions}}),d=f.extend({isLeaf:!0,init:function(t,e){this._super(),this.setParent(t),this.text=e,this.finalText=e},expand:function(){},toLabel:function(){return this.text}})
o.prototype.loadFrom=function(t){t=this.wrapRules(t),this.baseRules=t,this.ruleSets.push(t),this.currentRules=this.ruleSets[this.ruleSets.length-1]},o.prototype.mapRules=function(t){return this.currentRules.mapRules(t)},o.prototype.applyToRules=function(t){this.currentRules.applyToRules(t)},o.prototype.wrapRules=function(t){if(t.prototype!==u){if(Array.isArray(t))return new u(t)
if("string"==typeof t||t instanceof String)return new u(t)
throw"Unknown rules type: "+t}return t},o.prototype.pushRules=function(t){t=this.wrapRules(t),this.ruleSets.push(t),this.currentRules=this.ruleSets[this.ruleSets.length-1]},o.prototype.popRules=function(){this.ruleSets.pop()
0===this.ruleSets.length,this.currentRules=this.ruleSets[this.ruleSets.length-1]},o.prototype.setRules=function(t){t=this.wrapRules(t),this.ruleSets=[t],this.currentRules=t},o.prototype.addRule=function(t){this.currentRules.addRule(seed)},o.prototype.select=function(){this.isSelected=!0},o.prototype.deselect=function(){this.isSelected=!1},o.prototype.getRule=function(t){return this.currentRules.get(t)},o.prototype.toString=function(){return this.key+": "+this.currentRules+"(overlaying "+(this.ruleSets.length-1)+")"},o.prototype.toJSON=function(){var t=this.baseRules.rules.map(function(t){return'"'+t.raw+'"'})
return'"'+this.key+'": ['+t+"]"},i.prototype.clear=function(){this.symbols={},this.modifiers={}
for(var t in c)c.hasOwnProperty(t)&&(this.modifiers[t]=c[t])},i.prototype.loadFrom=function(t){var e
this.clear(),e=void 0!==t.symbols?t.symbols:t
var s=Object.keys(e)
this.symbolNames=[]
for(var r=0;r<s.length;r++){var n=s[r]
this.symbolNames.push(n),this.symbols[n]=new o(this,n),this.symbols[n].loadFrom(e[n])}},i.prototype.toText=function(){return this.toJSON()},i.prototype.toJSON=function(){var t=Object.keys(this.symbols)
this.symbolNames=[]
for(var e=[],s=0;s<t.length;s++){var r=t[s],n=this.symbols[r]
n&&n.baseRules&&e.push("    "+this.symbols[r].toJSON())}var o
return o=e.join(",\n"),o="{\n"+o+"\n}"},i.prototype.select=function(){this.isSelected=!0},i.prototype.deselect=function(){this.isSelected=!1},i.prototype.mapSymbols=function(t){var e=this.symbols
return this.symbolNames.map(function(s){return t(e[s],s)})},i.prototype.applyToSymbols=function(t){for(var e=0;e<this.symbolNames.length;e++){var s=this.symbolNames[e]
t(this.symbols[s],s)}},i.prototype.addOrGetSymbol=function(t){return void 0===this.symbols[t]&&(this.symbols[t]=new o(t)),this.symbols[t]},i.prototype.pushRules=function(t,e){var s=this.addOrGetSymbol(t)
s.pushRules(e)},i.prototype.popRules=function(t,e){var s=this.addOrGetSymbol(t)
s.popRules()
0===s.ruleSets.length&&(this.symbols[t]=void 0)},i.prototype.applyMod=function(t,e){if(!this.modifiers[t])throw console.log(this.modifiers),"Unknown mod: "+t
return this.modifiers[t](e)},i.prototype.getRule=function(t,e){var s=this.symbols[t]
if(void 0===s){var r=new a("{{"+t+"}}")
return r.error="Missing symbol "+t,r}var n=s.getRule()
if(void 0===n){var r=new a("["+t+"]")
return console.log(r.sections),r.error="Symbol "+t+" has no rule",r}return n},i.prototype.expand=function(t){var e=new y(this,t)
return e.expand(),e},i.prototype.flatten=function(t){var e=new y(this,t)
return e.expand(),e.childText},i.prototype.analyze=function(){this.symbolNames=[]
for(var t in this.symbols)this.symbols.hasOwnProperty(t)&&this.symbolNames.push(t)
for(var e=0;e<this.symbolNames.length;e++)for(var s=this.symbolNames[e],r=this.symbols[s],n=0;n<r.baseRules.length;n++){var o=r.baseRules[n]
o.parsed=tracery.parse(o.raw)}},i.prototype.selectSymbol=function(t){console.log(this)
this.get(t)},tracery.createGrammar=function(t){var e=new i
return e.loadFrom(t),e},tracery.test=function(){console.log("=========================================="),console.log("test tracery"),tracery.testParse(""),tracery.testParse("fooo"),tracery.testParse("####"),tracery.testParse("#[]#[]##"),tracery.testParse("#someSymbol# and #someOtherSymbol#"),tracery.testParse("#someOtherSymbol.cap.pluralize#"),tracery.testParse("#[#do some things#]symbol.mod[someotherthings[and a function]]#"),tracery.testParse("#[fxn][fxn][fxn[subfxn]]symbol[[fxn]]#"),tracery.testParse("#[fxn][#fxn#][fxn[#subfxn#]]symbol[[fxn]]#"),tracery.testParse("#hero# ate some #color# #animal.s#"),tracery.testParse("#someSymbol# and #someOtherSymbol"),tracery.testParse("#[fxn][fxn][fxn[subfxn]]symbol[fxn]]#"),tracery.testParseTag("[action]symbol.mod1.mod2[postAction]"),tracery.testParseTag("stuff[action]symbol.mod1.mod2[postAction]"),tracery.testParseTag("[action]symbol.mod1.mod2[postAction]stuff"),tracery.testParse("#hero# ate some #color# #animal.s#"),tracery.testParse("#[#setPronouns#][#setOccupation#][hero:#name#]story#")}}()
